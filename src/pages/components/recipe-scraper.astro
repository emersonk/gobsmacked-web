---
// src/pages/recipe-scraper.astro
import BaseLayout from "@/layouts/BaseLayout.astro";
---
<BaseLayout>
    <div class="container">
        <h1>Recipe Scraper</h1>
        <form class="form" id="recipeForm">
          <input
            type="url"
            id="recipeUrl"
            class="input"
            placeholder="Enter recipe URL"
            required
          />
          <button type="submit" class="button" id="submitButton">Scrape Recipe</button
          >
        </form>
        <div id="loading" class="loading" style="display: none;">
          Processing recipe...
        </div>
        <div id="error" class="error" style="display: none;"></div>
        <div id="recipeResult" class="recipe-display" style="display: none;">
          <div class="recipe-section">
            <h2>Recipe Details</h2>
            <img
              id="recipeImage"
              class="recipe-image"
              alt="Recipe"
              style="display: none;"
            />
            <p><strong>Title:</strong> <span id="recipeTitle"></span></p>
            <p><strong>Total Time:</strong> <span id="recipeTime"></span></p>
            <p><strong>Yields:</strong> <span id="recipeYield"></span></p>
          </div>
      
          <div class="parent"></div>
        </div>
      </div>
      
      <script>
        import { fetchRecipe } from "../../scripts/api";
        import { renderRecipeGrid } from "../../scripts/recipeProcessing";
        import { toggleUIElements } from "../../scripts/uiHelpers";
      
        const form = document.getElementById("recipeForm")!;
      
        form.addEventListener("submit", async (e) => {
          e.preventDefault();
      
          const url = (document.getElementById("recipeUrl") as HTMLInputElement).value;
          toggleUIElements.showLoading();
      
          try {
            const data = await fetchRecipe(url);
            renderRecipeGrid(data.steps, data.ingredients);
            toggleUIElements.showResult();
          } catch (error) {
            toggleUIElements.showError(error.message);
          } finally {
            toggleUIElements.hideLoading();
          }
        });
      </script>
      
</BaseLayout>
